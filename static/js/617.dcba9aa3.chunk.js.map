{"version":3,"file":"static/js/617.dcba9aa3.chunk.js","mappings":"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","sources":["../node_modules/@revenuecat/purchases-capacitor/src/web.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport { WebPlugin } from '@capacitor/core';\nimport type {\n  BILLING_FEATURE,\n  CustomerInfo,\n  CustomerInfoUpdateListener,\n  IN_APP_MESSAGE_TYPE,\n  IntroEligibility,\n  LOG_LEVEL,\n  LogHandler,\n  LogInResult,\n  MakePurchaseResult,\n  PurchasesConfiguration,\n  PurchasesEntitlementInfo,\n  PurchasesOffering,\n  PurchasesOfferings,\n  PurchasesPromotionalOffer,\n  PurchasesStoreProduct,\n  PurchasesStoreTransaction,\n  PurchasesVirtualCurrencies,\n  PurchasesWinBackOffer,\n  ShouldPurchasePromoProductListener,\n  Storefront,\n  WebPurchaseRedemption,\n  WebPurchaseRedemptionResult,\n} from '@revenuecat/purchases-typescript-internal-esm';\nimport {\n  REFUND_REQUEST_STATUS,\n  VERIFICATION_RESULT,\n  WebPurchaseRedemptionResultType,\n} from '@revenuecat/purchases-typescript-internal-esm';\n\nimport type {\n  GetEligibleWinBackOffersForPackageOptions,\n  GetEligibleWinBackOffersForProductOptions,\n  GetProductOptions,\n  GetPromotionalOfferOptions,\n  PurchaseDiscountedPackageOptions,\n  PurchaseDiscountedProductOptions,\n  PurchasePackageOptions,\n  PurchasePackageWithWinBackOfferOptions,\n  PurchaseProductWithWinBackOfferOptions,\n  PurchasesPlugin,\n  PurchaseStoreProductOptions,\n  PurchaseSubscriptionOptionOptions,\n  SyncAmazonPurchaseOptions,\n  SyncObserverModeAmazonPurchaseOptions,\n} from './definitions';\n\nexport class PurchasesWeb extends WebPlugin implements PurchasesPlugin {\n  private shouldMockWebResults = false;\n  private webNotSupportedErrorMessage = 'Web not supported in this plugin.';\n\n  configure(_configuration: PurchasesConfiguration): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('configure');\n  }\n\n  parseAsWebPurchaseRedemption(_options: { urlString: string }): Promise<{\n    webPurchaseRedemption: WebPurchaseRedemption | null;\n  }> {\n    return this.mockReturningFunctionIfEnabled('parseAsWebPurchaseRedemption', { webPurchaseRedemption: null });\n  }\n\n  redeemWebPurchase(_options: { webPurchaseRedemption: WebPurchaseRedemption }): Promise<WebPurchaseRedemptionResult> {\n    return this.mockReturningFunctionIfEnabled('redeemWebPurchase', {\n      result: WebPurchaseRedemptionResultType.INVALID_TOKEN,\n    });\n  }\n\n  setMockWebResults(options: { shouldMockWebResults: boolean }): Promise<void> {\n    this.shouldMockWebResults = options.shouldMockWebResults;\n    return Promise.resolve();\n  }\n\n  setSimulatesAskToBuyInSandbox(_simulatesAskToBuyInSandbox: { simulatesAskToBuyInSandbox: boolean }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setSimulatesAskToBuyInSandbox');\n  }\n  addCustomerInfoUpdateListener(_customerInfoUpdateListener: CustomerInfoUpdateListener): Promise<string> {\n    return this.mockReturningFunctionIfEnabled('addCustomerInfoUpdateListener', 'mock-callback-id');\n  }\n  removeCustomerInfoUpdateListener(_options: { listenerToRemove: string }): Promise<{ wasRemoved: boolean }> {\n    return this.mockReturningFunctionIfEnabled('removeCustomerInfoUpdateListener', { wasRemoved: false });\n  }\n  addShouldPurchasePromoProductListener(\n    _shouldPurchasePromoProductListener: ShouldPurchasePromoProductListener,\n  ): Promise<string> {\n    return this.mockReturningFunctionIfEnabled('addShouldPurchasePromoProductListener', 'mock-callback-id');\n  }\n  removeShouldPurchasePromoProductListener(_listenerToRemove: string): Promise<{ wasRemoved: boolean }> {\n    return this.mockReturningFunctionIfEnabled('removeShouldPurchasePromoProductListener', { wasRemoved: false });\n  }\n  getOfferings(): Promise<PurchasesOfferings> {\n    const mockOfferings: PurchasesOfferings = {\n      all: {},\n      current: null,\n    };\n    return this.mockReturningFunctionIfEnabled('getOfferings', mockOfferings);\n  }\n  getCurrentOfferingForPlacement(_options: { placementIdentifier: string }): Promise<PurchasesOffering | null> {\n    const mockOffering: PurchasesOffering | null = null;\n    return this.mockReturningFunctionIfEnabled('getCurrentOfferingForPlacement', mockOffering);\n  }\n  syncAttributesAndOfferingsIfNeeded(): Promise<PurchasesOfferings> {\n    const mockOfferings: PurchasesOfferings = {\n      all: {},\n      current: null,\n    };\n    return this.mockReturningFunctionIfEnabled('syncAttributesAndOfferingsIfNeeded', mockOfferings);\n  }\n  getProducts(_options: GetProductOptions): Promise<{ products: PurchasesStoreProduct[] }> {\n    const mockProducts = { products: [] };\n    return this.mockReturningFunctionIfEnabled('getProducts', mockProducts);\n  }\n  purchaseStoreProduct(_options: PurchaseStoreProductOptions): Promise<MakePurchaseResult> {\n    const mockPurchaseResult: MakePurchaseResult = {\n      productIdentifier: _options.product.identifier,\n      customerInfo: this.mockEmptyCustomerInfo,\n      transaction: this.mockTransaction(_options.product.identifier),\n    };\n    return this.mockReturningFunctionIfEnabled('purchaseStoreProduct', mockPurchaseResult);\n  }\n  purchaseDiscountedProduct(_options: PurchaseDiscountedProductOptions): Promise<MakePurchaseResult> {\n    const mockPurchaseResult: MakePurchaseResult = {\n      productIdentifier: _options.product.identifier,\n      customerInfo: this.mockEmptyCustomerInfo,\n      transaction: this.mockTransaction(_options.product.identifier),\n    };\n    return this.mockReturningFunctionIfEnabled('purchaseDiscountedProduct', mockPurchaseResult);\n  }\n  purchasePackage(_options: PurchasePackageOptions): Promise<MakePurchaseResult> {\n    const mockPurchaseResult: MakePurchaseResult = {\n      productIdentifier: _options.aPackage.product.identifier,\n      customerInfo: this.mockEmptyCustomerInfo,\n      transaction: this.mockTransaction(_options.aPackage.product.identifier),\n    };\n    return this.mockReturningFunctionIfEnabled('purchasePackage', mockPurchaseResult);\n  }\n  purchaseSubscriptionOption(_options: PurchaseSubscriptionOptionOptions): Promise<MakePurchaseResult> {\n    const mockPurchaseResult: MakePurchaseResult = {\n      productIdentifier: _options.subscriptionOption.productId,\n      customerInfo: this.mockEmptyCustomerInfo,\n      transaction: this.mockTransaction(_options.subscriptionOption.productId),\n    };\n    return this.mockReturningFunctionIfEnabled('purchaseSubscriptionOption', mockPurchaseResult);\n  }\n  purchaseDiscountedPackage(_options: PurchaseDiscountedPackageOptions): Promise<MakePurchaseResult> {\n    const mockPurchaseResult: MakePurchaseResult = {\n      productIdentifier: _options.aPackage.product.identifier,\n      customerInfo: this.mockEmptyCustomerInfo,\n      transaction: this.mockTransaction(_options.aPackage.product.identifier),\n    };\n    return this.mockReturningFunctionIfEnabled('purchaseDiscountedPackage', mockPurchaseResult);\n  }\n  restorePurchases(): Promise<{ customerInfo: CustomerInfo }> {\n    const mockResponse = { customerInfo: this.mockEmptyCustomerInfo };\n    return this.mockReturningFunctionIfEnabled('restorePurchases', mockResponse);\n  }\n  recordPurchase(options: { productID: string }): Promise<{ transaction: PurchasesStoreTransaction }> {\n    const mockResponse = {\n      transaction: this.mockTransaction(options.productID),\n    };\n    return this.mockReturningFunctionIfEnabled('recordPurchase', mockResponse);\n  }\n  getAppUserID(): Promise<{ appUserID: string }> {\n    return this.mockReturningFunctionIfEnabled('getAppUserID', {\n      appUserID: 'test-web-user-id',\n    });\n  }\n  getStorefront(): Promise<Storefront> {\n    return this.mockReturningFunctionIfEnabled('getStorefront', {\n      countryCode: 'USA',\n    });\n  }\n  logIn(_appUserID: { appUserID: string }): Promise<LogInResult> {\n    const mockLogInResult: LogInResult = {\n      customerInfo: this.mockEmptyCustomerInfo,\n      created: false,\n    };\n    return this.mockReturningFunctionIfEnabled('logIn', mockLogInResult);\n  }\n  logOut(): Promise<{ customerInfo: CustomerInfo }> {\n    const mockResponse = { customerInfo: this.mockEmptyCustomerInfo };\n    return this.mockReturningFunctionIfEnabled('logOut', mockResponse);\n  }\n  setLogLevel(_level: { level: LOG_LEVEL }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setLogLevel');\n  }\n  setLogHandler(_logHandler: LogHandler): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setLogHandler');\n  }\n  getCustomerInfo(): Promise<{ customerInfo: CustomerInfo }> {\n    const mockResponse = { customerInfo: this.mockEmptyCustomerInfo };\n    return this.mockReturningFunctionIfEnabled('getCustomerInfo', mockResponse);\n  }\n  syncPurchases(): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('syncPurchases');\n  }\n  syncObserverModeAmazonPurchase(_options: SyncObserverModeAmazonPurchaseOptions): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('syncObserverModeAmazonPurchase');\n  }\n  syncAmazonPurchase(_options: SyncAmazonPurchaseOptions): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('syncAmazonPurchase');\n  }\n  enableAdServicesAttributionTokenCollection(): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('enableAdServicesAttributionTokenCollection');\n  }\n  isAnonymous(): Promise<{ isAnonymous: boolean }> {\n    const mockResponse = { isAnonymous: false };\n    return this.mockReturningFunctionIfEnabled('isAnonymous', mockResponse);\n  }\n  checkTrialOrIntroductoryPriceEligibility(_productIdentifiers: {\n    productIdentifiers: string[];\n  }): Promise<{ [productId: string]: IntroEligibility }> {\n    return this.mockReturningFunctionIfEnabled('checkTrialOrIntroductoryPriceEligibility', {});\n  }\n  getPromotionalOffer(_options: GetPromotionalOfferOptions): Promise<PurchasesPromotionalOffer | undefined> {\n    return this.mockReturningFunctionIfEnabled('getPromotionalOffer', undefined);\n  }\n  getEligibleWinBackOffersForProduct(\n    _options: GetEligibleWinBackOffersForProductOptions,\n  ): Promise<{ eligibleWinBackOffers: PurchasesWinBackOffer[] }> {\n    return this.mockReturningFunctionIfEnabled('getEligibleWinBackOffersForProduct', { eligibleWinBackOffers: [] });\n  }\n  getEligibleWinBackOffersForPackage(\n    _options: GetEligibleWinBackOffersForPackageOptions,\n  ): Promise<{ eligibleWinBackOffers: PurchasesWinBackOffer[] }> {\n    return this.mockReturningFunctionIfEnabled('getEligibleWinBackOffersForPackage', { eligibleWinBackOffers: [] });\n  }\n  purchaseProductWithWinBackOffer(\n    _options: PurchaseProductWithWinBackOfferOptions,\n  ): Promise<MakePurchaseResult | undefined> {\n    return this.mockReturningFunctionIfEnabled('purchaseProductWithWinBackOffer', undefined);\n  }\n  purchasePackageWithWinBackOffer(\n    _options: PurchasePackageWithWinBackOfferOptions,\n  ): Promise<MakePurchaseResult | undefined> {\n    return this.mockReturningFunctionIfEnabled('purchasePackageWithWinBackOffer', undefined);\n  }\n  invalidateCustomerInfoCache(): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('invalidateCustomerInfoCache');\n  }\n  presentCodeRedemptionSheet(): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('presentCodeRedemptionSheet');\n  }\n  setAttributes(_attributes: { [key: string]: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setAttributes');\n  }\n  setEmail(_email: { email: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setEmail');\n  }\n  setPhoneNumber(_phoneNumber: { phoneNumber: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setPhoneNumber');\n  }\n  setDisplayName(_displayName: { displayName: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setDisplayName');\n  }\n  setPushToken(_pushToken: { pushToken: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setPushToken');\n  }\n  setProxyURL(_url: { url: string }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setProxyURL');\n  }\n  collectDeviceIdentifiers(): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('collectDeviceIdentifiers');\n  }\n  setAdjustID(_adjustID: { adjustID: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setAdjustID');\n  }\n  setAppsflyerID(_appsflyerID: { appsflyerID: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setAppsflyerID');\n  }\n  setFBAnonymousID(_fbAnonymousID: { fbAnonymousID: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setFBAnonymousID');\n  }\n  setMparticleID(_mparticleID: { mparticleID: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setMparticleID');\n  }\n  setCleverTapID(_cleverTapID: { cleverTapID: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setCleverTapID');\n  }\n  setMixpanelDistinctID(_mixpanelDistinctID: { mixpanelDistinctID: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setMixpanelDistinctID');\n  }\n  setFirebaseAppInstanceID(_firebaseAppInstanceID: { firebaseAppInstanceID: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setFirebaseAppInstanceID');\n  }\n  setOnesignalID(_onesignalID: { onesignalID: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setOnesignalID');\n  }\n  setOnesignalUserID(_onesignalUserID: { onesignalUserID: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setOnesignalUserID');\n  }\n  setAirshipChannelID(_airshipChannelID: { airshipChannelID: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setAirshipChannelID');\n  }\n  setMediaSource(_mediaSource: { mediaSource: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setMediaSource');\n  }\n  setCampaign(_campaign: { campaign: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setCampaign');\n  }\n  setAdGroup(_adGroup: { adGroup: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setAdGroup');\n  }\n  setAd(_ad: { ad: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setAd');\n  }\n  setKeyword(_keyword: { keyword: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setKeyword');\n  }\n  setCreative(_creative: { creative: string | null }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('setCreative');\n  }\n  canMakePayments(_features?: { features?: BILLING_FEATURE[] }): Promise<{ canMakePayments: boolean }> {\n    return this.mockReturningFunctionIfEnabled('canMakePayments', {\n      canMakePayments: true,\n    });\n  }\n  beginRefundRequestForActiveEntitlement(): Promise<{\n    refundRequestStatus: REFUND_REQUEST_STATUS;\n  }> {\n    const mockResult = {\n      refundRequestStatus: REFUND_REQUEST_STATUS.USER_CANCELLED,\n    };\n    return this.mockReturningFunctionIfEnabled('beginRefundRequestForActiveEntitlement', mockResult);\n  }\n  beginRefundRequestForEntitlement(_entitlementInfo: {\n    entitlementInfo: PurchasesEntitlementInfo;\n  }): Promise<{ refundRequestStatus: REFUND_REQUEST_STATUS }> {\n    const mockResult = {\n      refundRequestStatus: REFUND_REQUEST_STATUS.USER_CANCELLED,\n    };\n    return this.mockReturningFunctionIfEnabled('beginRefundRequestForEntitlement', mockResult);\n  }\n  beginRefundRequestForProduct(_storeProduct: {\n    storeProduct: PurchasesStoreProduct;\n  }): Promise<{ refundRequestStatus: REFUND_REQUEST_STATUS }> {\n    const mockResult = {\n      refundRequestStatus: REFUND_REQUEST_STATUS.USER_CANCELLED,\n    };\n    return this.mockReturningFunctionIfEnabled('beginRefundRequestForProduct', mockResult);\n  }\n\n  showInAppMessages(_options?: { messageTypes?: IN_APP_MESSAGE_TYPE[] }): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('showInAppMessages');\n  }\n\n  isConfigured(): Promise<{ isConfigured: boolean }> {\n    const mockResult = { isConfigured: true };\n    return this.mockReturningFunctionIfEnabled('isConfigured', mockResult);\n  }\n\n  getVirtualCurrencies(): Promise<{ virtualCurrencies: PurchasesVirtualCurrencies }> {\n    return this.mockReturningFunctionIfEnabled('getVirtualCurrencies', {\n      virtualCurrencies: this.mockEmptyVirtualCurrencies,\n    });\n  }\n\n  invalidateVirtualCurrenciesCache(): Promise<void> {\n    return this.mockNonReturningFunctionIfEnabled('invalidateVirtualCurrenciesCache');\n  }\n\n  getCachedVirtualCurrencies(): Promise<{ cachedVirtualCurrencies: PurchasesVirtualCurrencies | null }> {\n    return this.mockReturningFunctionIfEnabled('getCachedVirtualCurrencies', {\n      cachedVirtualCurrencies: this.mockEmptyVirtualCurrencies,\n    });\n  }\n\n  // Mock helpers\n\n  private mockEmptyCustomerInfo: CustomerInfo = {\n    entitlements: {\n      all: {},\n      active: {},\n      verification: VERIFICATION_RESULT.NOT_REQUESTED,\n    },\n    activeSubscriptions: [],\n    allPurchasedProductIdentifiers: [],\n    latestExpirationDate: null,\n    firstSeen: '2023-08-31T15:11:21.445Z',\n    originalAppUserId: 'mock-web-user-id',\n    requestDate: '2023-08-31T15:11:21.445Z',\n    allExpirationDates: {},\n    allPurchaseDates: {},\n    originalApplicationVersion: null,\n    originalPurchaseDate: null,\n    managementURL: null,\n    nonSubscriptionTransactions: [],\n    subscriptionsByProductIdentifier: {},\n  };\n\n  private mockEmptyVirtualCurrencies: PurchasesVirtualCurrencies = {\n    all: {},\n  };\n\n  private mockTransaction(productIdentifier: string): PurchasesStoreTransaction {\n    return {\n      productIdentifier: productIdentifier,\n      purchaseDate: new Date().toISOString(),\n      transactionIdentifier: '',\n    };\n  }\n\n  private mockNonReturningFunctionIfEnabled(functionName: string): Promise<void> {\n    if (!this.shouldMockWebResults) {\n      return Promise.reject(this.webNotSupportedErrorMessage);\n    }\n    console.log(`${functionName} called on web with mocking enabled. No-op`);\n    return Promise.resolve();\n  }\n\n  private mockReturningFunctionIfEnabled<T>(functionName: string, returnValue: T): Promise<T> {\n    if (!this.shouldMockWebResults) {\n      return Promise.reject(this.webNotSupportedErrorMessage);\n    }\n    console.log(`${functionName} called on web with mocking enabled. Returning mocked value`);\n    return Promise.resolve(returnValue);\n  }\n}\n"],"names":["PurchasesWeb","WebPlugin","constructor","shouldMockWebResults","webNotSupportedErrorMessage","mockEmptyCustomerInfo","entitlements","all","active","verification","VERIFICATION_RESULT","NOT_REQUESTED","activeSubscriptions","allPurchasedProductIdentifiers","latestExpirationDate","firstSeen","originalAppUserId","requestDate","allExpirationDates","allPurchaseDates","originalApplicationVersion","originalPurchaseDate","managementURL","nonSubscriptionTransactions","subscriptionsByProductIdentifier","mockEmptyVirtualCurrencies","configure","_configuration","this","mockNonReturningFunctionIfEnabled","parseAsWebPurchaseRedemption","_options","mockReturningFunctionIfEnabled","webPurchaseRedemption","redeemWebPurchase","result","WebPurchaseRedemptionResultType","INVALID_TOKEN","setMockWebResults","options","Promise","resolve","setSimulatesAskToBuyInSandbox","_simulatesAskToBuyInSandbox","addCustomerInfoUpdateListener","_customerInfoUpdateListener","removeCustomerInfoUpdateListener","wasRemoved","addShouldPurchasePromoProductListener","_shouldPurchasePromoProductListener","removeShouldPurchasePromoProductListener","_listenerToRemove","getOfferings","current","getCurrentOfferingForPlacement","syncAttributesAndOfferingsIfNeeded","getProducts","products","purchaseStoreProduct","mockPurchaseResult","productIdentifier","product","identifier","customerInfo","transaction","mockTransaction","purchaseDiscountedProduct","purchasePackage","aPackage","purchaseSubscriptionOption","subscriptionOption","productId","purchaseDiscountedPackage","restorePurchases","mockResponse","recordPurchase","productID","getAppUserID","appUserID","getStorefront","countryCode","logIn","_appUserID","mockLogInResult","created","logOut","setLogLevel","_level","setLogHandler","_logHandler","getCustomerInfo","syncPurchases","syncObserverModeAmazonPurchase","syncAmazonPurchase","enableAdServicesAttributionTokenCollection","isAnonymous","checkTrialOrIntroductoryPriceEligibility","_productIdentifiers","getPromotionalOffer","undefined","getEligibleWinBackOffersForProduct","eligibleWinBackOffers","getEligibleWinBackOffersForPackage","purchaseProductWithWinBackOffer","purchasePackageWithWinBackOffer","invalidateCustomerInfoCache","presentCodeRedemptionSheet","setAttributes","_attributes","setEmail","_email","setPhoneNumber","_phoneNumber","setDisplayName","_displayName","setPushToken","_pushToken","setProxyURL","_url","collectDeviceIdentifiers","setAdjustID","_adjustID","setAppsflyerID","_appsflyerID","setFBAnonymousID","_fbAnonymousID","setMparticleID","_mparticleID","setCleverTapID","_cleverTapID","setMixpanelDistinctID","_mixpanelDistinctID","setFirebaseAppInstanceID","_firebaseAppInstanceID","setOnesignalID","_onesignalID","setOnesignalUserID","_onesignalUserID","setAirshipChannelID","_airshipChannelID","setMediaSource","_mediaSource","setCampaign","_campaign","setAdGroup","_adGroup","setAd","_ad","setKeyword","_keyword","setCreative","_creative","canMakePayments","_features","beginRefundRequestForActiveEntitlement","mockResult","refundRequestStatus","REFUND_REQUEST_STATUS","USER_CANCELLED","beginRefundRequestForEntitlement","_entitlementInfo","beginRefundRequestForProduct","_storeProduct","showInAppMessages","isConfigured","getVirtualCurrencies","virtualCurrencies","invalidateVirtualCurrenciesCache","getCachedVirtualCurrencies","cachedVirtualCurrencies","purchaseDate","Date","toISOString","transactionIdentifier","functionName","console","log","reject","returnValue"],"sourceRoot":""}